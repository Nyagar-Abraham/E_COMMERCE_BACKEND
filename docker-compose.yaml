
services:
  # PostgreSQL Database for all services
  postgres-db:
    image: postgres:15-alpine
    container_name: postgres-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pass1234
      POSTGRES_MULTIPLE_DATABASES: user_service_db,product_service_db,payment_service_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

#  # Customer Service
#  user-service:
#    build: ./user_service
#    container_name: -service
#    ports:
#      - "8081:8081"
#    environment:
#      SPRING_APPLICATION_NAME: customer-service
#      SERVER_PORT: 8081
#      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-db:5432/customer_service_db
#      SPRING_DATASOURCE_USERNAME: postgres
#      SPRING_DATASOURCE_PASSWORD: pass1234
#      SPRING_JPA_HIBERNATE_DDL_AUTO: update
#    depends_on:
#      postgres-db:
#        condition: service_healthy
#
#  # Account Service
#  account-service:
#    build:
#      context: ./account-service
#      dockerfile: Dockerfile
#    container_name: account-service
#    ports:
#      - "8082:8082"
#    environment:
#      SPRING_APPLICATION_NAME: account-service
#      SERVER_PORT: 8082
#      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-db:5432/account_service_db
#      SPRING_DATASOURCE_USERNAME: postgres
#      SPRING_DATASOURCE_PASSWORD: pass1234
#      SPRING_JPA_HIBERNATE_DDL_AUTO: update
#    depends_on:
#      postgres-db:
#        condition: service_healthy
#
#  # Card Service
#  card-service:
#    build:
#      context: ./card-service
#      dockerfile: Dockerfile
#    container_name: card-service
#    ports:
#      - "8083:8083"
#    environment:
#      SPRING_APPLICATION_NAME: card-service
#      SERVER_PORT: 8083
#      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-db:5432/card_service_db
#      SPRING_DATASOURCE_USERNAME: postgres
#      SPRING_DATASOURCE_PASSWORD: pass1234
#      SPRING_JPA_HIBERNATE_DDL_AUTO: update
#    depends_on:
#      postgres-db:
#        condition: service_healthy

volumes:
  postgres_data: